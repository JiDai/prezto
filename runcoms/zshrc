#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Jidai <jidai@github.com>
#

# Profiling mode START
# zmodload zsh/zprof

export LANGUAGE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LANG="en_US.UTF-8"

export WORKON_HOME=$HOME/.virtualenvs
export PYENV_VERSION=3.4.2

export ZSH_CUSTOM="$HOME/.zprezto/"

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#
# Customize...
#

export VISUAL=vim
export EDITOR="$VISUAL"

fpath=(~/.zprezto/my_completions $fpath)
autoload -U compinit && compinit

#
# History filter with command line beginning
#

autoload -Uz up-line-or-beginning-search
autoload -Uz down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey '\eOA' up-line-or-beginning-search
bindkey '\e[A' up-line-or-beginning-search
bindkey '\eOB' down-line-or-beginning-search
bindkey '\e[B' down-line-or-beginning-search

#
# Python stuff
#

export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PATH="$HOME/.pyenv/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
export PYTHONSTARTUP=~/.pythonrc.py

if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
    export WORKON_HOME=$HOME/.virtualenvs
    export VIRTUALENVWRAPPER_LOG_DIR="$WORKON_HOME"
    export VIRTUALENVWRAPPER_HOOK_DIR="$WORKON_HOME"
    source /usr/local/bin/virtualenvwrapper.sh
    [[ -f ~/.virtualenv_current ]] && workon $(cat ~/.virtualenv_current)
fi


if [ -d $PYENV_ROOT ]; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

#
# NVM
#

export NVM_DIR="$HOME/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#
# RVM
#

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"


#
# Environment
#

export MA_INSTANCE=jordid
export MA_ENV=dev

export PGHOST=dev.meilleursagents.org
export PGDATABASE=meilleursagents_dev
export PGUSER=meilleursagents_dev

export PATH="./node_modules/.bin:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="/Users/jordid/MAWork/Lib/google-cloud-sdk/bin:$PATH" # Add GCloud cli

#
# Use hub as git client, alias hub=git
#

eval "$(hub alias -s)"

#
# Aliases
#

alias venv="source ~/.virtualenvs/py34-www/bin/activate"
alias ma_tunnel='ssh -L 5432:localhost:5432 dev.meilleursagents.org'
alias ma_sync_to_dev="rsync -rlK --delete --exclude 'temp' --exclude 'data1' --exclude 'vendors' --exclude
'static/build' --exclude 'static/mypro' --exclude 'newrelic.ini' --exclude 'node_modules' --exclude 'build' --
exclude 'bower_components' --exclude '.git' /Users/jordid/MAWork/MeilleursAgents/ jordid@dev.meilleursagents.org:/
home/jordid/meilleursagents/"
alias pi_sync_to_dev="rsync -rlK --delete --exclude 'vendors' --exclude 'newrelic.ini' --exclude '.idea' --
exclude 'node_modules' --exclude 'build' --exclude 'bower_components' --exclude '.git' /Users/jordid/MAWork/
PrixImmobilier/ jordid@dev.meilleursagents.org:/home/jordid/PrixImmobilier/"

alias rm_node_modules="find . -name \"nodemodules\" -type d -prune -exec rm -rf '{}' +"

alias tt="timetracker"
alias tttl="timetracker task list"
alias tttb="timetracker task start"
alias ttts="timetracker task stop"
alias ttjl="timetracker journal list"
alias ttja="timetracker journal add"
alias ttr="timetracker report"

alias selenium-chrome="open vnc://localhost:secret@localhost:5900"
alias selenium-firefox="open vnc://localhost:secret@localhost:5901"

alias git_clean_branches="git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d"
alias ...="cd $(git rev-parse --show-toplevel)"
alias gitco="git branch | fzf | xargs git checkout"

if [[ -s "$HOME/.zsh_custom" ]]; then
    source "$HOME/.zsh_custom"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Profiling mode STOP
# zprof
