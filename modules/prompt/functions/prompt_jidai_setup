#
# A simple theme that displays relevant, contextual information.
# Fork of sorin theme
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Jordi Dosne <sorin.ionescu@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/nrGV6pg.png
#

#
# 16 Terminal Colors
# -- ---------------
#  0 black
#  1 red
#  2 green
#  3 yellow
#  4 blue
#  5 magenta
#  6 cyan
#  7 white
#  8 bright black
#  9 bright red
# 10 bright green
# 11 bright yellow
# 12 bright blue
# 13 bright magenta
# 14 bright cyan
# 15 bright white
#


_prompt_paradox_current_bg='NONE'
_prompt_paradox_segment_separator='ÓÇ∞'



function prompt_paradox_start_segment {
  local bg fg
  [[ -n "$1" ]] && bg="%K{$1}" || bg="%k"
  [[ -n "$2" ]] && fg="%F{$2}" || fg="%f"
  if [[ "$_prompt_paradox_current_bg" != 'NONE' && "$1" != "$_prompt_paradox_current_bg" ]]; then
    print -n " $bg%F{$_prompt_paradox_current_bg}$_prompt_paradox_segment_separator$fg "
  else
    print -n "$bg$fg "
  fi
  _prompt_paradox_current_bg="$1"
  [[ -n "$3" ]] && print -n "$3"
}

function prompt_paradox_end_segment {
  if [[ -n "$_prompt_paradox_current_bg" ]]; then
    print -n " %k%F{$_prompt_paradox_current_bg}$_prompt_paradox_segment_separator"
  else
    print -n "%k"
  fi
  print -n "%f"
  _prompt_paradox_current_bg=''
}



# Load dependencies.
pmodload 'helper'

function prompt_sorin_pwd {
  local pwd="${PWD/#$HOME/~}"
  _prompt_sorin_pwd="$pwd"
}

function prompt_sorin_git_info {
  # Append Git status.
  if [[ -s "$_prompt_sorin_precmd_async_data" ]]; then
    alias typeset='typeset -g'
    source "$_prompt_sorin_precmd_async_data"
    RPROMPT+='${git_info:+${(e)git_info[status]}}'
    unalias typeset
  fi

  # Reset PID.
  _prompt_sorin_precmd_async_pid=0

  # Redisplay prompt.
  zle && zle reset-prompt
}

function prompt_sorin_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_sorin_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -USR1 $$
}

function prompt_sorin_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_sorin_pwd

  # Set python-info parameters.
  export VIRTUAL_ENV_DISABLE_PROMPT='0'
  python-info

  # Set node-info parameters
  node-info

  # Define prompts.
  RPROMPT='${editor_info[overwrite]}${VIM:+" %B%F{6}V%f%b"}'

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_sorin_precmd_async_pid > 0 )); then
    kill -TERM "$_prompt_sorin_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_sorin_git_info USR1
  prompt_sorin_precmd_async &!
  _prompt_sorin_precmd_async_pid=$!
}

function print_icon() {
  # Awesome-Patched Font required! See:
  # https://github.com/gabrielelana/awesome-terminal-fonts/tree/patching-strategy/patched
  # Set the right locale to protect special characters
  typeset -gAH icons
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  icons=(
      APPLE_ICON                     $'\uF179'              # ÔÖπ
      WINDOWS_ICON                   $'\uF17A'              # Óúè
      FREEBSD_ICON                   $'\U1F608 '            # üòà
      ANDROID_ICON                   $'\uE17B'              # ÔÖª
      LINUX_ICON                     $'\uF17C'              # ÔÖº
      SUNOS_ICON                     $'\uF185 '             # ÔÜÖ
  )

  local icon_name=$1
  echo -n "${icons[$icon_name]}"
}

# OS detection
case $(uname) in
    Darwin)
      OS='OSX'
      OS_ICON=$(print_icon 'APPLE_ICON')
      ;;
    CYGWIN_NT-*)
      OS='Windows'
      OS_ICON=$(print_icon 'WINDOWS_ICON')
      ;;
    FreeBSD)
      OS='BSD'
      OS_ICON=$(print_icon 'FREEBSD_ICON')
      ;;
    OpenBSD)
      OS='BSD'
      OS_ICON=$(print_icon 'FREEBSD_ICON')
      ;;
    DragonFly)
      OS='BSD'
      OS_ICON=$(print_icon 'FREEBSD_ICON')
      ;;
    Linux)
      OS='Linux'
      OS_ICON=$(print_icon 'LINUX_ICON')

      # Check if we're running on Android
      case $(uname -o 2>/dev/null) in
        Android)
          OS='Android'
          OS_ICON=$(print_icon 'ANDROID_ICON')
          ;;
      esac
      ;;
    SunOS)
      OS='Solaris'
      OS_ICON=$(print_icon 'SUNOS_ICON')
      ;;
    *)
      OS=''
      OS_ICON=''
      ;;
esac

function prompt_sorin_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_sorin_precmd_async_pid=0
  _prompt_sorin_precmd_async_data="${TMPPREFIX}-prompt_sorin_data"

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_sorin_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ' %B%F{1}‚ùØ%F{3}‚ùØ%F{2}‚ùØ%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{3}‚ô∫%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %B%F{2}‚ùÆ%F{3}‚ùÆ%F{1}‚ùÆ%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{2}‚úö%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{13}‚¨Ü%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{13}‚¨á%f%%b'
  zstyle ':prezto:module:git:info:branch' format ' %%B%F{2}%b%f%%b'
  zstyle ':prezto:module:git:info:commit' format ' %%B%F{3}%.7c%f%%b'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{1}‚úñ%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{4}‚ú±%f%%b'
  zstyle ':prezto:module:git:info:position' format ' %%B%F{13}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{5}‚ûú%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{6}‚ú≠%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{3}‚ïê%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{7}‚óº%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' '$(coalesce "%b" "%p" "%c")%s%A%B%S%a%d%m%r%U%u'

  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format ' %F{yellow}py:%v%f'

  # Set node-info parameters
  zstyle ':prezto:module:node:info:version' format ' %F{yellow}node:%v%f'

  # Define prompts.
  PROMPT='$OS_ICON ${SSH_TTY:+"%F{9}%n%f%F{7}@%f%F{3}%m%f "}%F{4}${_prompt_sorin_pwd}%(!. %B%F{1}#%f%b.)${node_info[version]}${python_info[virtualenv]}
%(?:%F{green}„ÉÑ%f:%F{red}‚úñ%f) '
  RPROMPT=''
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

prompt_sorin_setup "$@"
